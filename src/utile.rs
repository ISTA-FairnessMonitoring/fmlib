// use std::rc::Rc;
// use std::vec;

// use crate::envs::admission::{
//     admission::Admission,
//     memoryless::Ammc
// };

// use crate::envs::mc::Mc;
// use crate::envs::lending::{
//     lending::Lending,
//     mapper::*,
//     memoryless::*,
// };
// use std::collections::HashMap;
// use rand::Rng;
// use crate::envs::lending::lv::*;



// pub fn markov_chain_admission_dequal_5() -> Ammc {
//     let admission = Admission {
//         score: 4,
//         threshold: 3,
//         label_threshold: 2,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0],
//         change_prob: vec![0.800000000000000044408920985006, 0.800000000000000044408920985006, 0.800000000000000044408920985006, 0.800000000000000044408920985006, 0.800000000000000044408920985006],
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dequal_10() -> Ammc {
//     let admission = Admission {
//         score: 9,
//         threshold: 8,
//         label_threshold: 7,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0],
//         change_prob: vec![0.800000000000000044408920985006, 0.800000000000000044408920985006, 0.800000000000000044408920985006, 0.800000000000000044408920985006, 0.800000000000000044408920985006, 0.800000000000000044408920985006, 0.800000000000000044408920985006, 0.800000000000000044408920985006, 0.800000000000000044408920985006, 0.800000000000000044408920985006],
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dequal_20() -> Ammc {
//     let admission = Admission {
//         score: 19,
//         threshold: 18,
//         label_threshold: 17,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0],
//         change_prob: vec
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dequal_50() -> Ammc {
//     let admission = Admission {
//         score: 49,
//         threshold: 48,
//         label_threshold: 47,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0],
//         change_prob: vec
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dslow_5() -> Ammc {
//     let admission = Admission {
//         score: 4,
//         threshold: 3,
//         label_threshold: 2,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0],
//         change_prob: vec![0.989999999999999991118215802999, 0.900000000000000022204460492503, 0.800000000000000044408920985006, 0.699999999999999955591079014994, 0.599999999999999977795539507497],
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dslow_10() -> Ammc {
//     let admission = Admission {
//         score: 9,
//         threshold: 8,
//         label_threshold: 7,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0],
//         change_prob: vec![0.989999999999999991118215802999, 0.949999999999999955591079014994, 0.900000000000000022204460492503, 0.849999999999999977795539507497, 0.800000000000000044408920985006, 0.750000000000000000000000000000, 0.699999999999999955591079014994, 0.650000000000000022204460492503, 0.599999999999999977795539507497, 0.550000000000000044408920985006],
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dslow_20() -> Ammc {
//     let admission = Admission {
//         score: 19,
//         threshold: 18,
//         label_threshold: 17,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0],
//         change_prob: vec![0.989999999999999991118215802999, 0.974999999999999977795539507497, 0.949999999999999955591079014994, 0.925000000000000044408920985006, 0.900000000000000022204460492503, 0.875000000000000000000000000000, 0.849999999999999977795539507497, 0.824999999999999955591079014994, 0.800000000000000044408920985006, 0.775000000000000022204460492503, 0.750000000000000000000000000000, 0.724999999999999977795539507497, 0.699999999999999955591079014994, 0.675000000000000044408920985006, 0.650000000000000022204460492503, 0.625000000000000000000000000000, 0.599999999999999977795539507497, 0.574999999999999955591079014994, 0.550000000000000044408920985006, 0.525000000000000022204460492503],
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dslow_50() -> Ammc {
//     let admission = Admission {
//         score: 49,
//         threshold: 48,
//         label_threshold: 47,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0],
//         change_prob: vec![0.989999999999999991118215802999, 0.989999999999999991118215802999, 0.979999999999999982236431605997, 0.969999999999999973354647408996, 0.959999999999999964472863211995, 0.949999999999999955591079014994, 0.939999999999999946709294817992, 0.929999999999999937827510620991, 0.920000000000000039968028886506, 0.910000000000000031086244689504, 0.900000000000000022204460492503, 0.890000000000000013322676295502, 0.880000000000000004440892098501, 0.869999999999999995559107901499, 0.859999999999999986677323704498, 0.849999999999999977795539507497, 0.839999999999999968913755310496, 0.829999999999999960031971113494, 0.820000000000000062172489379009, 0.810000000000000053290705182008, 0.800000000000000044408920985006, 0.790000000000000035527136788005, 0.780000000000000026645352591004, 0.770000000000000017763568394003, 0.760000000000000008881784197001, 0.750000000000000000000000000000, 0.739999999999999991118215802999, 0.729999999999999982236431605997, 0.719999999999999973354647408996, 0.709999999999999964472863211995, 0.699999999999999955591079014994, 0.689999999999999946709294817992, 0.679999999999999937827510620991, 0.669999999999999928945726423990, 0.659999999999999920063942226989, 0.650000000000000022204460492503, 0.640000000000000013322676295502, 0.630000000000000004440892098501, 0.619999999999999995559107901499, 0.609999999999999986677323704498, 0.599999999999999977795539507497, 0.590000000000000079936057773011, 0.580000000000000071054273576010, 0.570000000000000062172489379009, 0.560000000000000053290705182008, 0.550000000000000044408920985006, 0.540000000000000035527136788005, 0.530000000000000026645352591004, 0.520000000000000017763568394003, 0.510000000000000008881784197001],
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dlin_5() -> Ammc {
//     let admission = Admission {
//         score: 4,
//         threshold: 3,
//         label_threshold: 2,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0],
//         change_prob: vec![0.989999999999999991118215802999, 0.800000000000000044408920985006, 0.599999999999999977795539507497, 0.400000000000000022204460492503, 0.199999999999999955591079014994],
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dlin_10() -> Ammc {
//     let admission = Admission {
//         score: 9,
//         threshold: 8,
//         label_threshold: 7,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0],
//         change_prob: vec![0.989999999999999991118215802999, 0.900000000000000022204460492503, 0.800000000000000044408920985006, 0.699999999999999955591079014994, 0.599999999999999977795539507497, 0.500000000000000000000000000000, 0.400000000000000022204460492503, 0.300000000000000044408920985006, 0.199999999999999955591079014994, 0.099999999999999977795539507497],
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dlin_20() -> Ammc {
//     let admission = Admission {
//         score: 19,
//         threshold: 18,
//         label_threshold: 17,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0],
//         change_prob: vec![0.989999999999999991118215802999, 0.949999999999999955591079014994, 0.900000000000000022204460492503, 0.849999999999999977795539507497, 0.800000000000000044408920985006, 0.750000000000000000000000000000, 0.699999999999999955591079014994, 0.650000000000000022204460492503, 0.599999999999999977795539507497, 0.550000000000000044408920985006, 0.500000000000000000000000000000, 0.449999999999999955591079014994, 0.400000000000000022204460492503, 0.349999999999999977795539507497, 0.300000000000000044408920985006, 0.250000000000000000000000000000, 0.199999999999999955591079014994, 0.150000000000000022204460492503, 0.099999999999999977795539507497, 0.050000000000000044408920985006],
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dlin_50() -> Ammc {
//     let admission = Admission {
//         score: 49,
//         threshold: 48,
//         label_threshold: 47,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0],
//         change_prob: vec![0.989999999999999991118215802999, 0.979999999999999982236431605997, 0.959999999999999964472863211995, 0.939999999999999946709294817992, 0.920000000000000039968028886506, 0.900000000000000022204460492503, 0.880000000000000004440892098501, 0.859999999999999986677323704498, 0.839999999999999968913755310496, 0.820000000000000062172489379009, 0.800000000000000044408920985006, 0.780000000000000026645352591004, 0.760000000000000008881784197001, 0.739999999999999991118215802999, 0.719999999999999973354647408996, 0.699999999999999955591079014994, 0.679999999999999937827510620991, 0.659999999999999920063942226989, 0.640000000000000013322676295502, 0.619999999999999995559107901499, 0.599999999999999977795539507497, 0.580000000000000071054273576010, 0.560000000000000053290705182008, 0.540000000000000035527136788005, 0.520000000000000017763568394003, 0.500000000000000000000000000000, 0.479999999999999982236431605997, 0.459999999999999964472863211995, 0.439999999999999946709294817992, 0.420000000000000039968028886506, 0.400000000000000022204460492503, 0.380000000000000004440892098501, 0.359999999999999986677323704498, 0.339999999999999968913755310496, 0.319999999999999951150186916493, 0.300000000000000044408920985006, 0.280000000000000026645352591004, 0.260000000000000008881784197001, 0.239999999999999991118215802999, 0.219999999999999973354647408996, 0.199999999999999955591079014994, 0.180000000000000048849813083507, 0.160000000000000031086244689504, 0.140000000000000013322676295502, 0.119999999999999995559107901499, 0.099999999999999977795539507497, 0.079999999999999960031971113494, 0.060000000000000053290705182008, 0.040000000000000035527136788005, 0.020000000000000017763568394003],
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dquad_5() -> Ammc {
//     let admission = Admission {
//         score: 4,
//         threshold: 3,
//         label_threshold: 2,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0],
//         change_prob: vec![0.989999999999999991118215802999, 0.959999999999999964472863211995, 0.839999999999999968913755310496, 0.640000000000000013322676295502, 0.359999999999999875655021241982],
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dquad_10() -> Ammc {
//     let admission = Admission {
//         score: 9,
//         threshold: 8,
//         label_threshold: 7,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0],
//         change_prob: vec![0.989999999999999991118215802999, 0.989999999999999991118215802999, 0.959999999999999964472863211995, 0.910000000000000031086244689504, 0.839999999999999968913755310496, 0.750000000000000000000000000000, 0.640000000000000013322676295502, 0.510000000000000008881784197001, 0.359999999999999875655021241982, 0.189999999999999946709294817992],
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dquad_20() -> Ammc {
//     let admission = Admission {
//         score: 19,
//         threshold: 18,
//         label_threshold: 17,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0],
//         change_prob: vec![0.989999999999999991118215802999, 0.997500000000000053290705182008, 0.989999999999999991118215802999, 0.977500000000000035527136788005, 0.959999999999999964472863211995, 0.937500000000000000000000000000, 0.910000000000000031086244689504, 0.877500000000000057731597280508, 0.839999999999999968913755310496, 0.797499999999999986677323704498, 0.750000000000000000000000000000, 0.697500000000000008881784197001, 0.640000000000000013322676295502, 0.577499999999999902300373832986, 0.510000000000000008881784197001, 0.437500000000000000000000000000, 0.359999999999999875655021241982, 0.277500000000000079936057773011, 0.189999999999999946709294817992, 0.097500000000000031086244689504],
//     };

//     Ammc { admission, curr: None }
//     }
    
// pub fn markov_chain_admission_dquad_50() -> Ammc {
//     let admission = Admission {
//         score: 49,
//         threshold: 48,
//         label_threshold: 47,
//         cost: vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0],
//         change_prob: vec![0.989999999999999991118215802999, 0.999600000000000044053649617126, 0.998399999999999954169993543474, 0.996399999999999952393636704073, 0.993600000000000038724579098925, 0.989999999999999991118215802999, 0.985600000000000031619151741324, 0.980400000000000049205084451387, 0.974400000000000043876013933186, 0.967600000000000015631940186722, 0.959999999999999964472863211995, 0.951600000000000001421085471520, 0.942400000000000015454304502782, 0.932400000000000006572520305781, 0.921599999999999974775732880516, 0.910000000000000031086244689504, 0.897599999999999953459450807713, 0.884399999999999963939956160175, 0.870400000000000062527760746889, 0.855600000000000027178259642824, 0.839999999999999968913755310496, 0.823599999999999998756550212420, 0.806400000000000005684341886081, 0.788399999999999989697130331479, 0.769600000000000061817218011129, 0.750000000000000000000000000000, 0.729600000000000026290081223124, 0.708399999999999918642856755469, 0.686399999999999899102931522066, 0.663599999999999967670305522915, 0.640000000000000013322676295502, 0.615599999999999925037741377309, 0.590400000000000035882408155885, 0.564400000000000012789769243682, 0.537599999999999855759824640700, 0.510000000000000008881784197001, 0.481600000000000028066438062524, 0.452400000000000024336088699783, 0.422399999999999997690736108780, 0.391599999999999948130380289513, 0.359999999999999875655021241982, 0.327600000000000113331566353736, 0.294400000000000106048503312195, 0.260400000000000075850437042391, 0.225600000000000022737367544323, 0.189999999999999946709294817992, 0.153599999999999958788521325914, 0.116400000000000058975047068088, 0.078400000000000025224267119484, 0.039600000000000079580786405131],
//     };

//     Ammc { admission, curr: None }
//     }
    